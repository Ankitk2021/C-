int findPivot(int* arr, int n){
int s = 0;
int e = n-1;
int mid = s + (e-s)/2;

while(s<e){

    if(arr[mid]>= arr[0]){
        s = mid + 1;
    } else {
        e = mid;
    }
    mid = s + (e-s)/2;
}

return s;
}


int BinarySearch (int* arr, int s, int e, int key){


int index = -1;
int mid = s + (e-s)/2;
while(s<=e){
 
 if(key==arr[mid]){
     index = mid;
     return mid;
 }else if (key > arr[mid]){
     s = mid+1;
 }else if(key < arr[mid]) {
     e = mid-1;
 }
mid = s + (e-s)/2;
}
return index;
}
int search(int* arr, int n, int key) {
    // Write your code here.

    int pivot =  findPivot(arr,n);
    
   if(key >= arr[pivot] && key <= arr[n-1] ){
       return BinarySearch(arr,pivot,n-1,key);
   } else {
       return BinarySearch(arr,0,pivot-1,key);
   }

    return -1;
}
