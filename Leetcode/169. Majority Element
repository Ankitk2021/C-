//M 1 TLE ü§í

#include <climits>
class Solution {
public:
    int fr(vector<int>& nums, int x) {
        int c = 0;

        for (int e : nums) {

            if (e == x) {
                c++;
            }
        }
        return c;
    }
    int majorityElement(vector<int>& nums) {

        int ans = INT_MIN;
        int m = nums.size()/2;
       
        for (int i = 0; i < nums.size(); i++) {

           if(fr(nums,nums[i])>m){
            ans = max(nums[i],ans);
           }


        }

        return ans;
    }
};

// M2 Optimized : O(n) ‚≠ê

class Solution {
public:
    int majorityElement(vector<int>& nums) {
       
       if(nums.size() == 1) return nums.front();
       


        sort(nums.begin(),nums.end());
        int ans = -1;
        int count  = 1;
        int prev = nums[0];

        for(int  i = 1;i<nums.size() ; i++){

            if(nums[i] == prev){
                count ++; 
            }else {
                count  = 1;
                prev = nums[i];
            }

            if(count > (nums.size()/2)){
                ans = prev;
            }

        }
        return ans;
    }
};
