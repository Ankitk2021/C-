    ListNode* reverseKGroup(ListNode* head, int k) {
        if (head == NULL)
            return head;

        ListNode* curr = head;
        ListNode* prev = NULL;
        ListNode* next = NULL;
      

        //Check available Nodes 
        int ncnt = 0;
        ListNode* t = head;
        while(t != NULL) {
            t = t->next;
            ncnt++;
        }

        if(ncnt < k) return head; // No need to reverse

        int cnt = 0;
        while (curr != NULL && cnt < k) {

            next = curr->next;
            curr->next = prev;
            prev = curr;
            curr = next;
            cnt++;
        }

        // step 2 recursion

        if (next != NULL) {
            head->next = reverseKGroup(next, k);
        }
        // step3 return
        return prev;
    }
