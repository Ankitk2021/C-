class Solution {
public:
    int reverse(int x) {
    int rev =0;

    

    while(x !=0){

        int l = x%10;
//Most important line to check overflow and underflow.
        if((rev > INT_MAX/10) || (rev == (INT_MAX)/10  && l>7) )return 0;
      
        if(rev<INT_MIN/10) return 0;
        if(rev==(INT_MIN)/10 && l<-8) return 0;

        rev = rev*10+l;
        x/= 10;

    }



      return rev;
    }
};


solution 2 //
#include <climits>
class Solution {
public:
    int reverse(int x) {
        int ans = 0;
        int dig;

        while (x != 0) {
            dig = x % 10;
            // do not substarct dig from INT_MAX or INT_MIN reson below

            /*
            if dig is negative
            you substract it from INT_MAX which will be added -> overflow ðŸ’¥

            same as if positive
            you substract it from INT_MIN which will be substracted from INT_MIN
            that is --> ðŸ’¥
            */
            if ((ans > (INT_MAX) / 10) || (ans < (INT_MIN) / 10))
                return 0;
            ans = ans * 10 + dig;
            x = x / 10;
        }

        return ans;
    }
};
